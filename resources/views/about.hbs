<section class="about-block about-menu">
    <h4 class="about-menu-title">Danh mục</h4>
    <a href="#thanks">Lời cám ơn</a> <br>
    <a href="#summary">Tóm tắt</a> <br>
    <a href="#chap1">Chương 1. Giới thiệu</a> <br>
    <a href="#chap2">Chương 2. Nền tảng</a> <br>
    <a href="#chap3">Chương 3. Sandboxing</a> <br>
    <a href="#chap4">Chương 4. Phân tích và khai phá dữ liệu</a> <br>
    <a href="#chap5">Chương 5. Ứng dụng học máy trong phát hiện các gói phần mềm độc hại</a> <br>
    <a href="#chap6">Chương 6. Các giải thuật học máy</a> <br>
    <a href="#chap7">Chương 7. Công cụ package-analysis</a> <br>
    <a href="#chap8">Chương 8. Hạn chế của luận văn và các bước cải tiến tiếp theo</a> <br>
    <a href="#thanks">Lời cám ơn</a> <br>
    <a href="#summary">Tóm tắt</a> <br>
    <a href="#chap1">Chương 1. Giới thiệu</a> <br>
    <a href="#chap2">Chương 2. Nền tảng</a> <br>
    <a href="#chap3">Chương 3. Sandboxing</a> <br>
    <a href="#chap4">Chương 4. Phân tích và khai phá dữ liệu</a> <br>
    <a href="#chap5">Chương 5. Ứng dụng học máy trong phát hiện các gói phần mềm độc hại</a> <br>
    <a href="#chap6">Chương 6. Các giải thuật học máy</a> <br>
    <a href="#chap7">Chương 7. Công cụ package-analysis</a> <br>
    <a href="#chap8">Chương 8. Hạn chế của luận văn và các bước cải tiến tiếp theo</a> <br>
    <a href="#summary">Tóm tắt</a> <br>
    <a href="#chap1">Chương 1. Giới thiệu</a> <br>
    <a href="#chap2">Chương 2. Nền tảng</a> <br>
    <a href="#chap3">Chương 3. Sandboxing</a> <br>
    <a href="#chap4">Chương 4. Phân tích và khai phá dữ liệu</a> <br>
    <a href="#chap5">Chương 5. Ứng dụng học máy trong phát hiện các gói phần mềm độc hại</a> <br>
    <a href="#chap6">Chương 6. Các giải thuật học máy</a> <br>
    <a href="#chap7">Chương 7. Công cụ package-analysis</a> <br>
    <a href="#chap8">Chương 8. Hạn chế của luận văn và các bước cải tiến tiếp theo</a> <br>
</section>

<section class="aboutpage">

    <div class="about-block about-content">
        {{!-- Header --}}
        <div class="about-header">
            <b class="about-dhqg">ĐẠI HỌC QUỐC GIA THÀNH PHỐ HỒ CHÍ MINH <br>TRƯỜNG ĐẠI HỌC CÔNG NGHỆ THÔNG TIN <BR>KHOA MẠNG MÁY TÍNH VÀ TRUYỀN THÔNG</BR></b>
            <img class="about-logo" src="/image/uit.png" alt="Không thể tải ảnh"> <br>
            <b class="about-student">Nguyễn Thành Công - 20521143 <br>Nguyễn Xuân Quang - 20521808 <br></b>
            <h3 class="about-title">KHÓA LUẬN TỐT NGHIỆP <br>Phân tích động mã nguồn mở và ứng dụng học máy trong nhận biết mã độc trong mã nguồn mở <br></h3>
            <div class="about-entitle"> <i>Dynamic analysis of open-source package and applying machine learning for open-source malware detection </i></div>
            <div class="about-attt"><b>CỬ NHÂN AN TOÀN THÔNG TIN </b></div>
            <div class="about-teacher"><b>GIẢNG VIÊN HƯỚNG DẪN <br>TS. Vũ Đức Lý <br>ThS. Trần Tuấn Dũng </b></div>
        </div>

        <div class="about-thanks" id="thanks">
            <h3 class="about-thanks-title"> LỜI CÁM ƠN</h3>
            <div class="about-thanks-text">
                <p>Nhóm em xin chân thành cảm ơn các thầy cô tại Trường Đại học Công Nghệ Thông tin và Khoa Mạng Máy Tính và Truyền Thông đã hỗ trợ, hướng dẫn và chỉ bảo em trong quá trình thực hiện khóa luận tốt nghiệp này.</p>
                <p>Nhóm em xin gửi lời cảm ơn sâu sắc đến Tiến sĩ Vũ Đức Lý đã hỗ trợ và hướng dẫn nhóm em trong quá trình thực hiện đề tài. Nhóm cũng gửi lời cảm ơn đến thầy Trần Tuấn Dũng đã cùng đồng hướng dẫn nhóm em trong quá trình thực hiện khóa luận này.</p>
                <p>Nhóm em cũng chân thành gửi lời cảm ơn đến bạn bè và gia đình đã luôn hỗ trợ, động viên nhóm em trong quá trình học tập và hoàn thành khóa luận tốt nghiệp này.</p>
                
            </div>
            <h4>Nhóm tác giả</h4>
            <hr>
        </div>

        <div class="about-summary" id="summary">
            <h3 class="about-summary-title">TÓM TẮT</h3>
            <p>Số lượng các gói phần mềm mã nguồn mở độc hại trên các kho mã nguồn mở (ví dụ như PyPI, Npm hay RubyGems) gia tăng nhanh chóng trong những năm gần đây. Các kỹ thuật phát hiện gói phần mềm độc hại chủ yếu tập trung vào phân tích tĩnh, mặc dù đơn giản và xử lý nhanh, tuy nhiên lại gây ra nhiều kết quả dương tính sai (một gói phần mềm lành tính bị nhận dạng nhầm là gói độc hại).</p>
            <p>Các đặc tính dựa trên phân tích động mô tả chi tiết hành vi thực sự của phần mềm độc hại thông qua việc chạy gói phần mềm trong một môi trường cô lập (sandbox). Các kỹ thuật này hứa hẹn đem lại kết quả phân tích chính xác hơn, so với phân tích tĩnh.</p>
            <p>Vì vậy, trong khóa luận tốt nghiệp này nhóm em nghiên cứu các đặc tính động của các gói trên các kho lưu trữ phần mềm mã nguồn mở phổ biến như Npm, PyPI, RubyGems, Packagist, Crates.io, dựa trên công cụ phân tích động package-analysis.</p>
            <p>Dựa trên các kết quả của công cụ phân tích package-anaysis, nhóm em cũng đề ra một cách tiếp cận sử dụng học máy để phát hiện các gói phần mềm độc hại một cách tự động. Ngoài ra, nghiên cứu này nhằm phân tích những hạn chế của công cụ package-analysis, từ đó đưa ra những gợi ý để cải thiện các công cụ phân tích động.</p>
            <hr>
        </div>

        {{!-- Body --}}
        <div class="about-body">
            <div class="chapter-1" id="chap1">
                <h3 class="chapter-1-title"> Chương 1. GIỚI THIỆU</h3>
                <div class="chapter-1.1">
                    <h4>1.1 Mở đầu</h4>
                    <p>Trong việc phát triển phần mềm, việc tự xây dựng các thư viện lại từ đầu sẽ rất tốn nguồn lực và kéo dài thời gian phát triển phần mềm. Việc sử dụng các thư viện có sẵn từ các bên thứ ba (ví dụ PyPI cho python) sẽ tiết kiệm chi phí, nâng cao hiệu quả cho việc phát triển phần mềm. Các thư viện mã nguồn mở là một lựa chọn của rất nhiều lập trình viên khi phát triển phần mềm.</p>
                    <p>Bên cạnh những lợi ích to lớn mà các thư viện mã nguồn mở đem lại, thì cũng tồn tại những rủi ro về bảo mật. Ví dụ, người tấn công có thể chèn các đoạn mã độc vào các thư viện mã nguồn mở trong trong một chuỗi cung ứng phát triển phần mềm, kết quả là lập trình viên sẽ trở thành nạn nhân khi sử dụng các thư viện này sẽ bị nhiễm mã độc khi sử dụng các gói phần mềm độc hại này. Một số hành vi độc hại trên máy nạn nhân có thể kể tới như đánh cắp thông tin (thông tin về hệ điều hành, token, session key v.v.) hay thực hiện các câu lệnh độc hại (command and control), reverse shell v.v. Ngoài ra, người tấn công còn sử dụng nhiều các kỹ thuật anti-analysis khác nhau để qua mặt các công cụ dò tìm mã độc như mã hóa, làm mờ v.v.</p>
                    <p>Theo một phân tích của snyk.io thì từ đầu năm 2023 tổ chức Synk đã phát hiện ra hơn 6800 các gói mã nguồn mở độc hại \cite{Digmi_2023d}. Đặc biệt, chỉ trong tháng 12 năm 2022 thì hãng Checkmarx đã phát hiện hơn 144,000 các gói mã nguồn mở độc hại \cite{Harush_2023}. Điều này cho thấy các gói phần mềm đang gia tăng nhanh chóng trong những năm gần đây \cite{Digmi_2023d}.</p>
                    <p>Có hai kiểu phân tích chính mã độc cho các gói mã nguồn mở là: phân tích tĩnh và phân tích động.  Phân tích tĩnh là quá trình phân tích mà không thực thi phần mềm mã độc.  Phân tích động là quá trình phân tích chạy chương trình hoặc thực thi trong môi trường cô lập (sandbox). Công cụ \textit{package-analysis} là công cụ tự động phân tích các gói mã nguồn mở từ các kho lưu trữ mã nguồn mở. Đây là một công cụ mã nguồn mở được Google phát triển. Công cụ này tập trung vào phân tích các hành vi thực sự của mã nguồn từ đó cho ra các kết quả chính xác hơn. Tuy nhiên, công cụ \textit{package-analysis} hiện tại chỉ cung cấp kết quả dữ liệu phân tích ở dạng thô (raw analysis result) ở dạng tệp tin JSON(JavaScript Object Notation), điều này sẽ đòi hỏi nhiều nguồn lực để phân tích các dữ liệu này. Các nguồn lực này bao gồm thời gian xem xét phân tích kết quả ở dạng thô hay viết các quy tắc (rules) để xác định xem gói mã nguồn mở này có độc hại hay không. Vì lý do đó, trong khóa luận tốt nghiệp này nhóm em quyết định tìm hiểu và phân tích, khai phá dữ liệu phân tích thô được cung cấp bởi công cụ \textit{package-analysis} để tìm hiểu hành vi thực sự bên trong của các gói mã nguồn mở lành tính và độc hại trong các kho lưu trữ mã nguồn mở phổ biến.</p>
                    <p>Khi phân tích các gói phần mềm mã nguồn mở, các nhà nghiên cứu bảo mật thường tập trung quan sát các yếu tố thường xác định là độc hại (Ví dụ: các tên miền nghi vấn độc hại mà các gói kết nối tới, các lời gọi hệ thống mà các gói sử dụng), bên cạnh đó những kiến thức chuyên môn cũng là yếu tố quan trọng để các nhà phân tích xác định các gói phần mềm là độc hại hay không. Dương tính giả thường xảy ra trong quá trình phân tích, khi mà các gói phần mềm là lành tính nhưng lại bị nhầm xác định là độc hại \cite{vu2023bad}. Để tránh dương tính giả, các công cụ phân tích mã độc cần phải phân biệt rõ sự khác biệt trong hành vi của các gói lành tính và các gói độc hại. Qua tìm hiểu của nhóm em, hiện nay chưa có tài liệu nghiên cứu khoa học nào phân tích về các hành vi độc hại của các gói phần mềm mã nguồn mở sử dụng công cụ phân tích động.</p>
                    <p>Các công cụ phát hiện gói phần mềm độc hại dựa vào các đặc điểm tĩnh thường nhận được kết quả nhiều dương tính giả do các kỹ thuật qua mặt các công cụ phân tích tĩnh luôn được cải tiến \cite{guo2023empirical}.  Việc xây dựng những công cụ phát hiện các gói mã nguồn độc hại dựa trên phân tích động mang nhiều kết quả hứa hẹn, vì nó tập trung phân tích vào biểu hiện hành vi của mã độc thay vì các đặc tính cố định.</p>
                    <p>Vì những lý do đề cập phía trên, trong luận văn tốt nghiệp này, nhóm em sẽ tập trung vào việc phân tích các đặc tính động của các gói mã nguồn mở trên nhiều kho mã nguồn mở khác nhau bao gồm PyPI, npm, RubyGems, Crates.io, Packagist . Trong quá trình tìm hiểu các công cụ phân tích động (Chương~\ref{chap:background}), nhóm em quyết định lựa chọn \textit{package-analysis}~\cite{package-analysis} là công cụ phân tích chính vì đây là một công cụ mã nguồn mở, dễ sử dụng, và có thể mở rộng (Chương~\ref{chap:sandboxing}). Trong luận văn này nhóm em sử dụng các kết quả phân tích của \textit{package-analysis} cho các gói mã nguồn mở. Sử dụng các kết quả phân tích này, nhóm em phân tích các đặc tính phổ biến có trong các gói độc hại và lành tính. Hơn nữa, trong luận văn này nhóm em cũng sẽ so sánh sự khác biệt hành vi giữa các gói mã nguồn mở độc hại và gói  mã nguồn mở lành tính (Chương~\ref{chap:findings}). Các đặc tính được trích xuất từ kết quả phân tích của các gói được đưa vào các giải thuật học máy để tự động phát hiện các gói mã nguồn mở (Chương~\ref{chap:machinelearning}).</p>
                    <p>Để xây dựng được các mô hình học máy để phân loại các gói mã nguồn mở độc hại, nhóm em đã xây dựng một tập dữ liệu bao gồm các gói lành tính và độc hại. Các bước phân tích và khai phá dữ liệu giúp nhóm em hiểu rõ sự khác nhau trong hành vi của các gói lành tính và các gói độc hại. Các mục dưới đây tóm lược các đóng góp của khóa luận tốt nghiệp này:</p>
                    <ul>
                        <li>Phương pháp các gói lành tính và độc hại phục vụ cho việc phân tích hành vi và huấn luyện các mô hình học máy.</li>
                        <li>Tìm hiểu về công cụ phân tích động các gói phần mềm mã nguồn mở \textit{package-analysis}, bao gồm các hạn chế cũng như ưu điểm của công cụ này và kỹ thuật sandboxing đằng sau nó.</li>
                        <li>Phân tích các hành vi độc hại và các hành vi lành tính trong các gói phần mềm mã nguồn mở, từ đó chắt lọc ra các đặc tính để phân loại các gói độc hại.</li>
                        <li>Áp dụng các mô hình học máy dựa trên dữ liệu của package-analysis để phân loại gói độc hại và lành tính.</li>
                    </ul>
                </div>
                

            </div>

            <div class="chapter-2" id="chap2"></div>

            <div class="chapter-3" id="chap3"></div>

            <div class="chapter-4" id="chap4"></div>

            <div class="chapter-5" id="chap5"></div>

            <div class="chapter-6" id="chap6"></div>

            <div class="chapter-7" id="chap7"></div>

        </div>

    </div>
</section>

<section class="about-block about-image">
    <img src="/image/beck.jpg" alt="Không thể tải ảnh">
</section>